var getMockito4jsBuilder=function(){return(void 0==window.mockito4jsBuilder||null==window.mockito4jsBuilder)&&(window.mockito4jsBuilder={build:function(a){var mockito4js={};return a.Util(mockito4js),a.Spy(mockito4js),a.Verify(mockito4js),a.Any(mockito4js),a.Eq(mockito4js),a.Capture(mockito4js),a.Do(mockito4js),a.Globalize(mockito4js),mockito4js}}),window.mockito4jsBuilder};getMockito4jsBuilder().Any=function(mockito4js){function a(a){this.type=a,this.matches=function(b){try{return typeof b==a||b instanceof a}catch(c){return!1}}}mockito4js.any=function(b){return new a(b)}},getMockito4jsBuilder().Eq=function(mockito4js){function a(a){this.value=a,this.matches=function(a){return b(this.value,a)}}function b(a,b){function c(a,b){return d(a,b)?!0:a===b?!0:"function"==typeof a&&"function"==typeof b||a instanceof Date&&b instanceof Date||a instanceof RegExp&&b instanceof RegExp||a instanceof String&&b instanceof String||a instanceof Number&&b instanceof Number?a.toString()===b.toString():g(a,b)?e(a,b)?!0:f(a,b)?h(a,b):!1:!1}function d(a,b){return isNaN(a)&&isNaN(b)&&"number"==typeof a&&"number"==typeof b}function e(a,b){return i.indexOf(a)>-1&&j.indexOf(b)>-1}function f(a,b){for(var c in b){if(b.hasOwnProperty(c)!==a.hasOwnProperty(c))return!1;if(typeof b[c]!=typeof a[c])return!1}return!0}function g(a,b){return a instanceof Object&&b instanceof Object?a.isPrototypeOf(b)||b.isPrototypeOf(a)?!1:a.constructor!==b.constructor?!1:a.prototype===b.prototype:!1}function h(a,b){for(var d in a){if(b.hasOwnProperty(d)!==a.hasOwnProperty(d))return!1;if(typeof b[d]!=typeof a[d])return!1;switch(typeof a[d]){case"object":case"function":if(i.push(a),j.push(b),!c(a[d],b[d]))return!1;i.pop(),j.pop();break;default:if(a[d]!==b[d])return!1}}return!0}var i=[],j=[];return c(a,b)}mockito4js.eq=function(b){return new a(b)}},getMockito4jsBuilder().Capture=function(mockito4js){function a(){this.values=[],this.matches=function(a){return this.values.push(a),!0},this.getValue=function(){if(0==this.values.length)throw new Error("No arguments captured!");return mockito4js.util.array.getLastElement(this.values)}}mockito4js.createArgumentCaptor=function(){return new a}},getMockito4jsBuilder().Do=function(mockito4js){function a(a){var b;document.createEvent?(b=document.createEvent("HTMLEvents"),b.initEvent(a,!0,!0)):(b=document.createEventObject(),b.eventType=a),b.eventName=a,this.fire=function(a){document.createEvent?a.dispatchEvent(b):a.fireEvent("on"+b.eventType,b)}}mockito4js.doNothing=function(){return new b(function(){})},mockito4js.doReturn=function(a){var c=mockito4js.util.array.convertArgumentsToArray(arguments);return new b(function(){return c.length<1?void 0:1==c.length?c[0]:c.shift()})},mockito4js.doThrow=function(a){if(!a instanceof Error)throw new Error("Argument passed to doThrow is not an Error!");return new b(function(){throw a})},mockito4js.doFire=function(c){function d(a){return!a.nodeType}var e=new a(c);return{on:function(a){if(d(a))throw new Error("You cannot call doFire on an object that is not a DOM element!");return new b(function(){e.fire(a)})}}};var b=function(a){this.execution=a,this.mockObjectImplementation=c};b.prototype.when=function(a){if(!a.isSpy)throw new Error("Argument passed to when is not a spy. Use mockito4js.spy() to create one.");return a instanceof Function?new d(a,this.execution):new this.mockObjectImplementation(a,this.execution)};var c=function(a,b){mockito4js.util.replaceFunctions(this,a,function(a){return a.functionToReplace=b,function(){a.source[a.property]=mockito4js.util.functionFactory.createMockFunction(arguments,a.source[a.property],mockito4js.util.functionFactory.createInvocationCountingFunction(a))}})},d=function(a,b){function c(c){return mockito4js.util.functionFactory.createMockFunction(c,a.execution,mockito4js.util.functionFactory.createInvocationCountingFunction({target:a,source:a,property:"self",functionToReplace:b}))}this.isCalled=function(){a.execution=c([])},this.isCalledWith=function(){a.execution=c(arguments)}};d=mockito4js.util.extend(d).from(c)},getMockito4jsBuilder().Globalize=function(mockito4js){mockito4js.globalize=function(){for(var a in mockito4js)mockito4js.hasOwnProperty(a)&&(window[a]=mockito4js[a])}},getMockito4jsBuilder().Spy=function(mockito4js){function a(){function a(a){var b;return b=function(){return void 0==b.invocations.self&&(b.invocations.self=[]),b.invocations.self.push({actualArguments:arguments}),b.execution.apply(this,arguments)},b.invocations={},mockito4js.util.replaceFunctions(b,a,mockito4js.util.functionFactory.createInvocationCountingFunction),b.isSpy=!0,b.execution=a,b}function b(a){return a.isSpy?(mockito4js.reset(a),a):(a.invocations={},mockito4js.util.replaceFunctions(a,a,mockito4js.util.functionFactory.createInvocationCountingFunction),a.isSpy=!0,a)}this.createSpy=function(c){return"function"==typeof c?a(c):b(c)}}var b=new a;mockito4js.spy=function(a){return b.createSpy(a)},mockito4js.reset=function(a){if(!a.isSpy)throw new Error("Object or function passed to reset is not a spy. Use mockito4js.spy() to create one.");for(var b in a.invocations)a.invocations.hasOwnProperty(b)&&(a.invocations[b]=[])}},getMockito4jsBuilder().Util=function(mockito4js){function a(){function a(a){return a.source instanceof Function&&void 0!=a.target.invocations?a.target.invocations:a.source.invocations}this.createMockFunction=function(a,b,c){return function(){return mockito4js.util.array.containsAllArguments(arguments,a)?c.apply(this,arguments):b.apply(this,arguments)}},this.createInvocationCountingFunction=function(b){return a(b)[b.property]=[],function(){return a(b)[b.property].push({actualArguments:arguments}),b.functionToReplace.apply(this,arguments)}},this.createVerifyFunction=function(a){function b(a,b,c){var d=[];return void 0!=a.invocations[b]&&a.invocations[b].forEach(function(a){(0==c.length||mockito4js.util.array.containsAllArguments(a.actualArguments,c))&&d.push(a)}),d}return function(){var c=a.additionalArguments.verifyArguments?arguments:[],d=b(a.source,a.property,c).length;a.additionalArguments.verification.verify(a.property,d)}}}function b(){function a(a){return void 0==a||null==a||0==a.length}this.containsAllArguments=function(a,b){if(a.length!=b.length)return!1;for(var c=0;c<b.length;c++){var d=b[c];if(!this.valuesMatch(a[c],d))return!1}return!0},this.arrayContains=function(a,b){for(var c=0;c<a.length;c++){if(void 0!=b&&null!=b&&void 0!=b.matches&&b.matches(a[c]))return!0;if(a[c]==b)return!0}return!1},this.convertArgumentsToArray=function(a){return Array.prototype.slice.call(a)},this.valuesMatch=function(a,b){return void 0!=b&&null!=b&&void 0!=b.matches&&b.matches(a)?!0:a==b},this.getLastElement=function(b){return a(b)?void 0:b[b.length-1]}}mockito4js.util={},mockito4js.util.functionFactory=new a,mockito4js.util.array=new b,mockito4js.util.replaceFunctions=function(a,b,c,d){for(var e in b)"function"==typeof b[e]&&(a[e]=c({target:a,source:b,property:e,functionToReplace:b[e],additionalArguments:d}))},mockito4js.util.extend=function(a){return{from:function(b){var c=function(){b.apply(this,arguments),a.apply(this,arguments)};return c.prototype=b.prototype,c}}}},getMockito4jsBuilder().Verify=function(mockito4js){mockito4js.verify=function(a,b){if(void 0==b||null==b)throw new Error("No verifier passed to verify method. Use one of the following verifiers:\nmockito4js.never()\nmockito4js.once()\nmockito4js.times()\nmockito4js.atLeast()\nmockito4js.atMost()\n");if(!a.isSpy)throw new Error("Verify cannot be called on an object that is not a spy. Use mockito4js.spy() to create a spy object.");return"function"==typeof a?new f(a,b):new e(a,b)},mockito4js.times=function(a){return new b(a)},mockito4js.never=function(){return new b(0)},mockito4js.once=function(){return new b(1)},mockito4js.atLeast=function(a){return new c(a)},mockito4js.atMost=function(a){return new d(a)};var a=function(a){this.invocationCount=a};a.prototype.verify=function(a,b){if(this.numberOfInvocationsNotCorrect(b))throw new Error('Number of invocations of "'+a+'" does not match the expected amount of '+this.invocationCount+". Actual number of invocations is "+b)};var b=function(){this.numberOfInvocationsNotCorrect=function(a){return a!=this.invocationCount}};b=mockito4js.util.extend(b).from(a);var c=function(){this.numberOfInvocationsNotCorrect=function(a){return a<this.invocationCount}};c=mockito4js.util.extend(c).from(a);var d=function(){this.numberOfInvocationsNotCorrect=function(a){return a>this.invocationCount}};d=mockito4js.util.extend(d).from(a);var e=function(a,b){mockito4js.util.replaceFunctions(this,a,mockito4js.util.functionFactory.createVerifyFunction,this.createAdditionalArguments(!0,b))};e.prototype.createAdditionalArguments=function(a,b){return{verifyArguments:a,verification:b}},e.prototype.createVerifyFunctionArguments=function(a,b,c){return{target:a,source:a,property:"self",functionToReplace:null,additionalArguments:e.prototype.createAdditionalArguments(c,b)}};var f=function(a,b){this.wasCalledWith=function(){return mockito4js.util.functionFactory.createVerifyFunction(this.createVerifyFunctionArguments(a,b,!0)).apply(this,arguments)},this.wasCalled=function(){return mockito4js.util.functionFactory.createVerifyFunction(this.createVerifyFunctionArguments(a,b,!1)).apply(this,arguments)}};f=mockito4js.util.extend(f).from(e)};var mockito4js=getMockito4jsBuilder().build(getMockito4jsBuilder());
//# sourceMappingURL=mockito4.min.js.map